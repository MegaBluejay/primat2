#+startup: latexpreview
#+include: "~/org/header.org"

#+begin_src emacs-lisp :session py :exports none :results silent
(pipenv-activate)
#+end_src

* Вариант 1

Две конкурирующие крупные торговые фирмы $F_1$ и $F_2$, планируют построить в одном из четырех небольших городов $G_1$, $G_2$, $G_3$, $G_4$, лежащих вдоль автомагистрали, по одному универсаму.

#+name: data1
|     | $G_1$ | $G_2$ | $G_3$ | $G_4$ |
|-----+-------+-------+-------+-------|
| км  |     0 |    30 |    40 |   150 |
| тыс |    30 |    50 |    40 |    30 |


Доход определяется численностью населения городов и степенью удаленности.

Пусть $d_j^i$ - расстояния от магазина $j$ фирмы до $i$ города

При $d_1^i < d_2^i$ $F_1$ получает 75%
При $d_1^i = d_2^i$ 60%
При $d_1^i > d_2^i$ 45%

Матрица игры:

#+name: matrix1
#+begin_src python :session py :exports both :var data=data1 :rownames yes
ds, pops = data

def f(i, j, k):
    di, dj = abs(ds[i] - ds[k]), abs(ds[j] - ds[k])
    if di < dj:
        return 0.75
    elif di == dj:
        return 0.6
    else:
        return 0.45

[[sum(pops[k] * f(i, j, k) for k in range(4)) for j in range(4)] for i in range(4)]
#+end_src

#+attr_latex: :mode inline-math :environment pmatrix
#+RESULTS: matrix1
|  90.0 | 76.5 | 76.5 | 103.5 |
| 103.5 | 90.0 | 91.5 | 103.5 |
| 103.5 | 88.5 | 90.0 | 103.5 |
|  76.5 | 76.5 | 76.5 |  90.0 |

У нее есть седловая точка:

#+begin_src python :session py :exports both :var matrix=matrix1
max(map(min, matrix)), min(max(matrix[i][j] for i in range(4)) for j in range(4))
#+end_src

#+RESULTS:
| 90.0 | 90.0 |

Оптимально обеим фирмам строить в $G_2$

* Вариант 7

Платежная матрица:

#+name: matrix7
#+attr_latex: :mode inline-math :environment pmatrix
|  1 | -1 | -1 |
| -1 | -1 |  3 |
| -1 |  2 | -1 |

Стратегии:

#+name: strat7
#+attr_latex: :mode inline-math :environment pmatrix
| 6 / 13 | 3 / 13 | 4 / 13 |
| 6 / 13 | 4 / 13 | 3 / 13 |

#+name: strat7_fixed
#+begin_src python :session py :exports none :var strat=strat7
[list(map(eval, row)) for row in strat]
#+end_src

#+RESULTS: strat7_fixed
| 0.46153846153846156 | 0.23076923076923078 |  0.3076923076923077 |
| 0.46153846153846156 |  0.3076923076923077 | 0.23076923076923078 |

#+begin_src python :session py :exports both :var matrix=matrix7 :var strat=strat7_fixed
strat1, strat2 = strat
round(sum(strat1[i] * sum(matrix[i][j] * strat2[j] for j in range(3)) for i in range(3)), 3)
#+end_src

#+RESULTS:
: -0.077

* Вариант 8

$x_1 + x_2 \rightarrow \min$

\begin{cases}
7 x_1 + 2 x_2 \geq 1 \\
x_1 + 11 x_2 \geq 1 \\
x_1, x_2 \geq 0
\end{cases}

Пусть

\begin{cases}
x_1 = \frac{x}{v} \\
x_2 = \frac{1 - x}{v}
\end{cases}

Тогда задачу можно записать как

$v = \frac{1}{x_1 + x_2} \rightarrow max$

\begin{cases}
7 x + 2 (1 - x) \geq v \\
x + 11 (1 - x) \geq v \\
1 \geq x \geq 0
\end{cases}

Если рассматривать $x$, как вероятность выбора 1м игроком 1й стратегии, а каждую строку как случай чистой стратегии 2го игрока,
это соответствует матричной игре

#+name: matrix8
#+attr_latex: :mode inline-math :environment pmatrix
| 7 |  1 |
| 2 | 11 |

* Вариант 9

Матрица игры:

| 7 | 2 | 5 | 1 |
| 2 | 2 | 3 | 4 |
| 5 | 3 | 4 | 4 |
| 3 | 2 | 1 | 6 |

1 столбец доминирует над 2

| 7 | 5 | 1 |
| 2 | 3 | 4 |
| 5 | 4 | 4 |
| 3 | 1 | 6 |

3 строка доминирует над 2

| 7 | 5 | 1 |
| 5 | 4 | 4 |
| 3 | 1 | 6 |

1 столбец доминирует над 2

| 7 | 1 |
| 5 | 4 |
| 3 | 6 |
